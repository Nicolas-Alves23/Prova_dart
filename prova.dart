import 'dart:io';

void main(){
  // mensagem de boas vindas personalizada
  String msg_boasvindas = """

‚†Ä‚†Ä‚†Ä‚†à‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚¢ª‚†õ‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚†à‚°ó‚†≤‚¢§‚£Ä‚†Ä‚†Ä‚†Ä
‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†õ‚†Å‚†Ä‚£æ‚£ø‚£ø‚£ø‚†ü‚†Å‚¢†‚†É‚¢Ä‚£ø‚£ø‚°è‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚£∏‚°Ä‚†Ä‚†Ä‚†â‚†í‚†Ñ
‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†ª‚£Ü‚†Ä‚†Ä‚£ø‚£ø‚°ø‚†Å‚†Ä‚¢Ä‚£æ‚£∂‚£ø‚£ø‚°ø‚£ø‚£¶‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚£†‚†§‚£Ω‚°Ü‚†Ä‚£ø‚†è‚†Ä‚¢Ä‚£¥‚°ø‚†ã‚†Å‚£ª‚†ø‚°Ñ‚†Ä‚†Å‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚°á‚†Ä‚†Ä‚†Å‚†∞‚†è‚†Ä‚°†‚†õ‚†â‚†Å‚†Ä‚†Ä‚†â‚†Ä‚£ß‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ß‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚°á‚†Ä‚†Ä‚£†‚†Ä‚†Ä‚†Ä‚¢∞‚£∂‚†Ñ‚†Ä‚†Ä‚°∞‚¢§‚†Ä‚°á‚†Ä‚¢Ä‚°æ‚¢ü‚£ø‚£ø‚£ø‚†ü‚†Å‚†ò‚£ø‚†ô‚†ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚††‚£§‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚†â‚£ø‚£ø‚£ø‚£è‚†Å‚£á‚†Ä‚†Ä‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚£§‚£§‚£¥‚†∑‚°Ä‚†ô‚¢∑‚£Ñ‚†Ä‚†Ä‚£æ‚†õ‚†ü‚†Å‚£º‚†Å‚†Ä‚¢ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†ª‚£ø‚°è‚†ò‚°Ñ‚¢∏‚†π‚£ø‚£ø‚†Ä‚†ò‚£Æ‚£≠‚†∂‚†Ç‚†Ä‚†Ä‚†í‚†ö‚¢â‚†â‚°ø‚¢Ñ‚†à‚¢¢‚°à‚†¢‚°ë‚¢é‚†Å‚†Ä‚†Ä‚¢∏‚°Å‚†Å‚†Ä‚£∫‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†õ‚°á‚†Ä‚°á‚¢∏‚†Ä‚¢ª‚£ø‚°á‚†â‚†Ä‚†≥‚°§‚†ó‚†Ä‚£Ä‚†§‚†ä‚£â‚££‚†≥‚°Ä‚†ë‚¢Ñ‚†ô‚¢¶‚°â‚¢Æ‚£ß‚†Ä‚†Ä‚†à‚£©‚†á‚¢Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Ä‚°á‚††‚°É‚¢∏‚†Ä‚¢∏‚†ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚°ñ‚†©‚¢¥‚£æ‚£ø‚£ø‚†ø‚°Ü‚†ô‚£Ñ‚†Ä‚†≥‚°Ä‚†ë‚¢Ñ‚†ª‚£á‚£∞‚†ø‚†ã‚£†‚£æ‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°á‚†Ä‚°á‚†∏‚°Ñ‚†à‚£á‚°º‚£Ñ‚†Ä‚†Ä‚†Ä‚†ô‚£∂‚£æ‚£ø‚°ø‚†ã‚†Ä‚°á‚†Ä‚†ò‚°Ñ‚†Ä‚†ô‚¢Ñ‚†Ä‚†Ä‚†à‚¢ß‚†¥‚†æ‚†ø‚†ü‚†õ‚¢ª‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°á‚†Ä‚£á‚°º‚†ß‚†¥‚†è‚†Ä‚†à‚£Ü‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚†ø‚°á‚†Ä‚¢Ä‚°á‚†Ä‚†Ä‚†π‚°Ñ‚†Ä‚¢∫‚£≥‚†Ä‚†£‚†à‚£á‚†Ä‚†Ä‚†Ä‚¢Ä‚£∏‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚¢Ä‚°∑‚†ö‚¢Å‚°†‚†Ä‚†Ä‚¢∏‚£Ä‚†Ä‚°è‚†ë‚¢Ñ‚°Ä‚†Ä‚†à‚†≥‚¢ç‚£õ‚†Ω‚†É‚†Ä‚†Ä‚†Ä‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°Ñ‚†à‚¢è‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ß‚†Ä‚†Ä‚†¥‚†â‚¢Ä‚°†‚†§‚¢º‚†Ä‚†Ä‚£ß‚°Ä‚†Ä‚£è‚†í‚¢§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°§‚¢ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢±‚†Ä‚†à‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚¢Ä‚†ê‚†ã‚†Å‚†Ä‚£†‚†ã‚†Å‚†Ä‚°è‚¢ø‚°Ä‚¢∏‚†Ä‚†Ä‚¢π‚†ì‚†í‚†í‚†≤‚£è‚†Å‚†â‚†â‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†≥‚£∂‚£º‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†à‚†ô‚†≤‚†§‚†Ä‚†Å‚†Ä‚†Ä‚¢†‚†á‚†ò‚£ß‚†∏‚°Ñ‚†Ä‚†à‚£Ü‚£Ä‚£Ä‚£Ä‚†à‚†≥‚°Ñ‚†Ä‚†ò‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†ã‚†Ä‚†Ä‚†à‚†Ä‚¢£‚†Ä‚†Ä‚†∏‚°Ñ‚†Ä‚†à‚†â‚†ô‚†ö‚†¶‚£Ä‚£π‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£∂‚£§‚†Ä‚¢†‚£∂‚£æ‚£ø‚†∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£Ü‚†Ä‚†Ä‚†ô‚¢Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†≤‚£§‚£¥‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚°Ñ‚¢≥‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†¢‚°Ä‚†Ä‚†Ä‚†ë‚¢Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢ª‚£ø‚£ø‚£ø‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚°†‚†û‚†â‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Ä‚†ò‚£å‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ì‚¢Ñ‚£Ä‚†Ä‚†ô‚†¢‚£Ñ‚†Ä‚¢∏‚°Ä‚†Ä‚†Ä‚¢Ä‚†û‚†â‚†õ‚¢ø‚£ø‚£ø‚£Ö‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
          BEMMM VINDOOOO
Voc√™ acabou de chegar na Star games
      Temos diversos produtos 
                  \n
""";
  print(msg_boasvindas);
  
  // Dando inicio ao inventario (19 produtos)
  // Fiz os primeiros 5 produtos e pedi para uma IA fazer o restante
  Map<int, Produto> inventario = {
    // Consoles
    1: Produto("PS5", 3500.00, 8),
    2: Produto("PS5 Digital", 3200.00, 5),
    3: Produto("Xbox Series X", 3200.00, 5),
    4: Produto("Xbox Series S", 1800.00, 10),
    5: Produto("Nintendo Switch", 2000.00, 12),
    6: Produto("Nintendo Switch OLED", 2500.00, 6),

    // Controles
    7: Produto("Controle DualSense PS5", 450.00, 20),
    8: Produto("Controle Xbox", 400.00, 15),
    9: Produto("Controle Joy-Con Switch", 350.00, 18),

    // Jogos PS5
    10: Produto("Marvel's Spider-Man: Miles Morales (PS5)", 299.00, 12),
    11: Produto("Demon's Souls (PS5)", 349.00, 8),
    
    // Jogos Xbox
    12: Produto("Halo Infinite (Xbox)", 299.00, 10),
    13: Produto("Forza Horizon 5 (Xbox)", 349.00, 7),

    // Jogos Switch
   14: Produto("Zelda: Breath of the Wild (Switch)", 299.00, 9),
   15: Produto("Mario Party Superstars (Switch)", 249.00, 10),

    // Acess√≥rios
    16: Produto("Headset Gamer RGB", 350.00, 25),
    17: Produto("Mouse Gamer RGB", 250.00, 30),
    18: Produto("Teclado Mec√¢nico Gamer", 450.00, 20),
    19: Produto("Cadeira Gamer", 1200.00, 5),
  };
  // forEach para print do estoque
  inventario.forEach((codigo, produto) => print("‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚î§$codigo -> $produto‚îú‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚ïê‚îÅ ,\n")); 

  // Perguntando para o usu√°rio se ele deseja comprar na loja
  print("Esse √© o nosso estoque, quer comprar conosco? (sim/n√£o)");
  String? escolha = stdin.readLineSync();

//Caso seja "sim" ira criar o primeiro usu√°rio
if (escolha == "sim") {
    print("Vamos primeiro criar seu usu√°rio");
    // iniciando a manipula√ß√£o do usu√°rio 
    Cliente cliente = criarCliente(); // Objeto Cliente criado
    mostrarDados(cliente.nome, cliente.documento); // Print com nome do Cliente e Documento

    Map<Produto, int> carrinho = {}; // iniciando o carrinho do cliente caso sua escolha seja sim 

while (true) {
  // Repeti√ß√£o de carrinho 
  print("\nCarrinho do cliente:");

  // Caso o carrinho esteja vazio print "carrinho vazio"
  if (carrinho.isEmpty) {
    print("Seu carrinho est√° vazio.");
  } 

  // Caso o carrinho tenha produtos  
  else {
    carrinho.forEach((produto, quantidade) {
      print("${produto.nome} | Quantidade: $quantidade | Pre√ßo unit√°rio: R\$${produto.preco.toStringAsFixed(2)} | Total: R\$${(produto.preco * quantidade).toStringAsFixed(2)}");
    });
  }

  print("\nDigite o c√≥digo do produto que deseja adicionar ao carrinho (ou '0' para finalizar):");
  String? inputCodigo = stdin.readLineSync();
  if (inputCodigo == '0') break; // O c√≥digo para no final 

  int? codigoProduto = int.tryParse(inputCodigo ?? '');
  if (codigoProduto == null || !inventario.containsKey(codigoProduto)) {
    print("C√≥digo inv√°lido. Tente novamente.");
    continue;
  }

  Produto produtoSelecionado = inventario[codigoProduto]!;

  print("Digite a quantidade desejada:");
  String? inputQtd = stdin.readLineSync();
  int? quantidade = int.tryParse(inputQtd ?? '');
  if (quantidade == null || quantidade <= 0) {
    print("Quantidade inv√°lida. Tente novamente.");
    continue;
  }

  adicionarAoCarrinho(carrinho, produtoSelecionado, quantidade);

  print("\nDeseja adicionar mais produtos? (sim/n√£o)");
  String? continuar = stdin.readLineSync();
  if (continuar?.toLowerCase() != 'sim') break;
}

// Mostra o carrinho final
print("\nResumo final do carrinho:");
carrinho.forEach((produto, quantidade) {
  print("${produto.nome} | Quantidade: $quantidade | Pre√ßo unit√°rio: R\$${produto.preco.toStringAsFixed(2)} | Total: R\$${(produto.preco * quantidade).toStringAsFixed(2)}");
});
    
  }
  else{
    print("FLW");
  }

}

void mostrarDados (nome , documento){
  print('ÍßÅìäà Nome:$nome ìäâÍßÇ\nÍßÅìäà Documento: $documento ìäâÍßÇ');
}

// Produtos como um objeto
class Produto{
  String nome;
  double preco;
  int quantidade;

  Produto(this.nome, this.preco, this.quantidade);

// Utilizado para auxiliar o dart no mostrar do objeto
// Caso n√£o tenha essa fun√ß√£o o dart n√£o sabe como exatamente mostrar o objeto
// n√£o √© totalmente necess√°rio para o programa, por√©m √© √∫til
@override 
String toString() {
  return "Produto: $nome | Pre√ßo: R\$${preco.toStringAsFixed(2)} | Quantidade: $quantidade";
}
}

// Objeto Cliente
class Cliente{
  // Primeira vez utilizando POO em dart
  // Criei um objeto Cliente para conseguiu retornar dois valores (Documentos e Nome)
  final String nome;
  final String documento;

  Cliente(this.nome, this.documento);
}

Cliente criarCliente() {
  String? nome;
  String? documento;
  String? erro;
  String? errodocuments;

  do {
    stdout.write("Nome:");
    nome = stdin.readLineSync();

    stdout.write("Documento(RG):");
    documento = stdin.readLineSync();

    erro = validarNome(nome);
    errodocuments = validarDocumento(documento);


    if (erro != null) {
      print("Erro: $erro\n");
      print("Repita e passe o seu documento e nome novamente \n");
    }

    if(errodocuments != null){
      print("Erro referente a documentos:$errodocuments");
      print("Repita e passe o seu documento e nome novamente \n");
    }

  } while (erro != null); // repete enquanto houver erro

  print("Cliente criado com sucesso! Nome: $nome \n");
  return Cliente (nome!, documento!);
}

String? validarNome(String? value) {
  if (value == null || value.trim().isEmpty) {
    return "Digite seu nome";
  }

  final regex = RegExp(r'^[a-zA-Z√Ä-√ø\s]+$');

  if (!regex.hasMatch(value)) {
    return "Somente letras s√£o permitidas";
  }

  return null; // v√°lido
}

String? validarDocumento (String? value){
    if (value == null || value.trim().isEmpty) {
    return "Digite seu nome";
  }
  final regex = RegExp(r'^[0-9]+$'); // aceita somente n√∫meros

  if (!regex.hasMatch(value)) {
    return "Somente n√∫meros s√£o permitidos";
  }

  return null; // v√°lido
}


void adicionarAoCarrinho(Map<Produto, int> carrinho, Produto produto, int quantidade) {
  if (quantidade > produto.quantidade) {
    print("N√£o h√° estoque suficiente para ${produto.nome}. Estoque atual: ${produto.quantidade}");
    return;
  }

  // Atualiza o carrinho
  if (carrinho.containsKey(produto)) {
    carrinho[produto] = carrinho[produto]! + quantidade;
  } else {
    carrinho[produto] = quantidade;
  }

  // Reduz estoque
  produto.quantidade -= quantidade;

  print("$quantidade ${produto.nome} adicionados ao carrinho.");
}

// ‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚î§Make by Nicolas-Alves23‚îú‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚ïê‚îÅ  
